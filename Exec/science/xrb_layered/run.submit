#!/bin/bash
#SBATCH --account=m3018
#SBATCH --constraint=cpu

#SBATCH --nodes=1
#SBATCH --ntasks-per-node=100

#SBATCH --time=00:02:00
#SBATCH --qos=debug

###SBATCH --time=10:00:00
###SBATCH --qos=regular

#SBATCH --mail-type=end
#SBATCH --mail-user=simon.guichandut@mail.mcgill.ca

export XRB=$MAESTROEX_HOME/Exec/science/xrb_layered
export MAESTRO_EXEC=$XRB/Maestro2d.gnu.x86-milan.MPI.ex
export INPUTS=$XRB/inputs/inputs_2d_high_square_6cm_bigpert

# Path of checks dir from *inside* run directory
export CHECKS_DIR=CHECKS

export XRB_SCRATCH=$PSCRATCH/xrb_layered
cd $XRB_SCRATCH

# Look for check file
# https://amrex-astro.github.io/workflow/nersc-workflow.html
function find_chk_file {
    # find_chk_file takes a single argument -- the wildcard pattern
    # for checkpoint files to look through
    chk=$1

    # find the latest 2 restart files.  This way if the latest didn't
    # complete we fall back to the previous one.
    temp_files=$(find $CHECKS_DIR -maxdepth 1 -name "${chk}" -print | sort | tail -2)
    restartFile=""
    for f in ${temp_files}
    do
        # the Header is the last thing written -- check if it's there, otherwise,
        # fall back to the second-to-last check file written
        if [ -f ${f}/Header ]; then
            restartFile="${f}"
        fi
    done
}

# look for 7-digit chk file
find_chk_file "*chk???????"

# restartString will be empty if no chk files are found -- i.e. new run
if [ "${restartFile}" = "" ]; then
    restartString=""
else
    restartString="maestro.restart_file=${restartFile}"
fi
echo $restartString

# Dump checkfile near end of job run time
(sleep 595m && echo -e "\n    Nearing end of job, dumping checkfile now\n" && touch dump_and_continue)& 

# debug this bash script
#${MAESTRO_EXEC} ${INPUTS} ${restartString}

# srun command
# -n is total number of tasks
# -c is cpus per task
# in perlmutter: 2*floor(128/#tasks per node)

# 1 node, -c = 2*floor(128/100) = 2
srun -n 100 --cpu-bind=cores -c 2 ${MAESTRO_EXEC} ${INPUTS} ${restartString}
